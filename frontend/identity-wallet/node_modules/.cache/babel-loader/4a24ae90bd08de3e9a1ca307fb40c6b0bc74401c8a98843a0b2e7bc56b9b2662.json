{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghav Sharma\\\\OneDrive\\\\Desktop\\\\decentralized-identity\\\\frontend\\\\identity-wallet\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserProvider, Contract } from 'ethers'; // Import ethers\nimport { Button, TextField, Container, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [did, setDID] = useState('');\n  const [document, setDocument] = useState('');\n\n  // Connect to MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n      setDID(`did:ethr:${address}`);\n    } else {\n      alert('Install MetaMask!');\n    }\n  };\n\n  // Register DID on the blockchain\n  const registerDID = async () => {\n    if (!window.ethereum) {\n      alert('MetaMask is not installed!');\n      return;\n    }\n    const provider = new BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n\n    // Replace with your contract address and ABI\n    const contractAddress = '0x...PASTE_CONTRACT_ADDRESS_HERE';\n    const contractABI = ['function registerDID(string did, string document)'];\n    const contract = new Contract(contractAddress, contractABI, signer);\n    try {\n      const tx = await contract.registerDID(did, document);\n      await tx.wait(); // Wait for the transaction to be mined\n      alert('DID Registered!');\n    } catch (error) {\n      console.error('Error registering DID:', error);\n      alert('Failed to register DID. Check the console for details.');\n    }\n  };\n\n  // Sign a message and verify it using the backend\n  const signMessage = async () => {\n    if (!window.ethereum) {\n      alert('MetaMask is not installed!');\n      return;\n    }\n    const provider = new BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n\n    // Example message to sign\n    const message = 'Hello, this is a signed message!';\n\n    // Sign the message\n    const signature = await signer.signMessage(message);\n    console.log('Signature:', signature);\n\n    // Send the message and signature to the backend for verification\n    const response = await fetch('http://localhost:3001/verify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message,\n        signature,\n        did\n      })\n    });\n    const result = await response.json();\n    if (result.isValid) {\n      alert('Signature is valid!');\n    } else {\n      alert('Signature is invalid!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Decentralized Identity Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connectWallet,\n        sx: {\n          mt: 2\n        },\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), did && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Your DID: \", did]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Identity Document (JSON)\",\n          multiline: true,\n          rows: 4,\n          value: document,\n          onChange: e => setDocument(e.target.value),\n          sx: {\n            mt: 2,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: registerDID,\n          sx: {\n            mt: 2\n          },\n          children: \"Register DID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: signMessage,\n          sx: {\n            mt: 2\n          },\n          children: \"Sign and Verify Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/H1OhQb6v9D7LU4B2mxtcDHLnDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserProvider","Contract","Button","TextField","Container","Typography","Box","jsxDEV","_jsxDEV","App","_s","did","setDID","document","setDocument","connectWallet","window","ethereum","request","method","provider","signer","getSigner","address","getAddress","alert","registerDID","contractAddress","contractABI","contract","tx","wait","error","console","signMessage","message","signature","log","response","fetch","headers","body","JSON","stringify","result","json","isValid","children","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","label","multiline","rows","value","onChange","e","target","width","_c","$RefreshReg$"],"sources":["C:/Users/Raghav Sharma/OneDrive/Desktop/decentralized-identity/frontend/identity-wallet/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserProvider, Contract } from 'ethers'; // Import ethers\r\nimport { Button, TextField, Container, Typography, Box } from '@mui/material';\r\n\r\nfunction App() {\r\n    const [did, setDID] = useState('');\r\n    const [document, setDocument] = useState('');\r\n\r\n    // Connect to MetaMask\r\n    const connectWallet = async () => {\r\n        if (window.ethereum) {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const provider = new BrowserProvider(window.ethereum);\r\n            const signer = await provider.getSigner();\r\n            const address = await signer.getAddress();\r\n            setDID(`did:ethr:${address}`);\r\n        } else {\r\n            alert('Install MetaMask!');\r\n        }\r\n    };\r\n\r\n    // Register DID on the blockchain\r\n    const registerDID = async () => {\r\n        if (!window.ethereum) {\r\n            alert('MetaMask is not installed!');\r\n            return;\r\n        }\r\n\r\n        const provider = new BrowserProvider(window.ethereum);\r\n        const signer = await provider.getSigner();\r\n\r\n        // Replace with your contract address and ABI\r\n        const contractAddress = '0x...PASTE_CONTRACT_ADDRESS_HERE';\r\n        const contractABI = [\r\n            'function registerDID(string did, string document)',\r\n        ];\r\n\r\n        const contract = new Contract(contractAddress, contractABI, signer);\r\n\r\n        try {\r\n            const tx = await contract.registerDID(did, document);\r\n            await tx.wait(); // Wait for the transaction to be mined\r\n            alert('DID Registered!');\r\n        } catch (error) {\r\n            console.error('Error registering DID:', error);\r\n            alert('Failed to register DID. Check the console for details.');\r\n        }\r\n    };\r\n\r\n    // Sign a message and verify it using the backend\r\n    const signMessage = async () => {\r\n        if (!window.ethereum) {\r\n            alert('MetaMask is not installed!');\r\n            return;\r\n        }\r\n\r\n        const provider = new BrowserProvider(window.ethereum);\r\n        const signer = await provider.getSigner();\r\n\r\n        // Example message to sign\r\n        const message = 'Hello, this is a signed message!';\r\n\r\n        // Sign the message\r\n        const signature = await signer.signMessage(message);\r\n        console.log('Signature:', signature);\r\n\r\n        // Send the message and signature to the backend for verification\r\n        const response = await fetch('http://localhost:3001/verify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ message, signature, did }),\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (result.isValid) {\r\n            alert('Signature is valid!');\r\n        } else {\r\n            alert('Signature is invalid!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Box mt={5}>\r\n                <Typography variant=\"h4\">Decentralized Identity Wallet</Typography>\r\n\r\n                {/* Connect Wallet Button */}\r\n                <Button variant=\"contained\" onClick={connectWallet} sx={{ mt: 2 }}>\r\n                    Connect Wallet\r\n                </Button>\r\n\r\n                {/* Display DID and Registration Form */}\r\n                {did && (\r\n                    <Box mt={3}>\r\n                        <Typography>Your DID: {did}</Typography>\r\n\r\n                        {/* Identity Document Input */}\r\n                        <TextField\r\n                            label=\"Identity Document (JSON)\"\r\n                            multiline\r\n                            rows={4}\r\n                            value={document}\r\n                            onChange={(e) => setDocument(e.target.value)}\r\n                            sx={{ mt: 2, width: '100%' }}\r\n                        />\r\n\r\n                        {/* Register DID Button */}\r\n                        <Button variant=\"contained\" onClick={registerDID} sx={{ mt: 2 }}>\r\n                            Register DID\r\n                        </Button>\r\n\r\n                        {/* Sign and Verify Message Button */}\r\n                        <Button variant=\"contained\" onClick={signMessage} sx={{ mt: 2 }}>\r\n                            Sign and Verify Message\r\n                        </Button>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,QAAQ,QAAQ,QAAQ,CAAC,CAAC;AACpD,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjB,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,MAAMC,QAAQ,GAAG,IAAIpB,eAAe,CAACgB,MAAM,CAACC,QAAQ,CAAC;MACrD,MAAMI,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;MACzC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCZ,MAAM,CAAC,YAAYW,OAAO,EAAE,CAAC;IACjC,CAAC,MAAM;MACHE,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACV,MAAM,CAACC,QAAQ,EAAE;MAClBQ,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IAEA,MAAML,QAAQ,GAAG,IAAIpB,eAAe,CAACgB,MAAM,CAACC,QAAQ,CAAC;IACrD,MAAMI,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;;IAEzC;IACA,MAAMK,eAAe,GAAG,kCAAkC;IAC1D,MAAMC,WAAW,GAAG,CAChB,mDAAmD,CACtD;IAED,MAAMC,QAAQ,GAAG,IAAI5B,QAAQ,CAAC0B,eAAe,EAAEC,WAAW,EAAEP,MAAM,CAAC;IAEnE,IAAI;MACA,MAAMS,EAAE,GAAG,MAAMD,QAAQ,CAACH,WAAW,CAACf,GAAG,EAAEE,QAAQ,CAAC;MACpD,MAAMiB,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MACjBN,KAAK,CAAC,iBAAiB,CAAC;IAC5B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CP,KAAK,CAAC,wDAAwD,CAAC;IACnE;EACJ,CAAC;;EAED;EACA,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAClB,MAAM,CAACC,QAAQ,EAAE;MAClBQ,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IAEA,MAAML,QAAQ,GAAG,IAAIpB,eAAe,CAACgB,MAAM,CAACC,QAAQ,CAAC;IACrD,MAAMI,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;;IAEzC;IACA,MAAMa,OAAO,GAAG,kCAAkC;;IAElD;IACA,MAAMC,SAAS,GAAG,MAAMf,MAAM,CAACa,WAAW,CAACC,OAAO,CAAC;IACnDF,OAAO,CAACI,GAAG,CAAC,YAAY,EAAED,SAAS,CAAC;;IAEpC;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDpB,MAAM,EAAE,MAAM;MACdqB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,OAAO;QAAEC,SAAS;QAAEzB;MAAI,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMiC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC,IAAID,MAAM,CAACE,OAAO,EAAE;MAChBrB,KAAK,CAAC,qBAAqB,CAAC;IAChC,CAAC,MAAM;MACHA,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAED,oBACIjB,OAAA,CAACJ,SAAS;IAAA2C,QAAA,eACNvC,OAAA,CAACF,GAAG;MAAC0C,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACPvC,OAAA,CAACH,UAAU;QAAC4C,OAAO,EAAC,IAAI;QAAAF,QAAA,EAAC;MAA6B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAGnE7C,OAAA,CAACN,MAAM;QAAC+C,OAAO,EAAC,WAAW;QAACK,OAAO,EAAEvC,aAAc;QAACwC,EAAE,EAAE;UAAEP,EAAE,EAAE;QAAE,CAAE;QAAAD,QAAA,EAAC;MAEnE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAGR1C,GAAG,iBACAH,OAAA,CAACF,GAAG;QAAC0C,EAAE,EAAE,CAAE;QAAAD,QAAA,gBACPvC,OAAA,CAACH,UAAU;UAAA0C,QAAA,GAAC,YAAU,EAACpC,GAAG;QAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAGxC7C,OAAA,CAACL,SAAS;UACNqD,KAAK,EAAC,0BAA0B;UAChCC,SAAS;UACTC,IAAI,EAAE,CAAE;UACRC,KAAK,EAAE9C,QAAS;UAChB+C,QAAQ,EAAGC,CAAC,IAAK/C,WAAW,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CJ,EAAE,EAAE;YAAEP,EAAE,EAAE,CAAC;YAAEe,KAAK,EAAE;UAAO;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eAGF7C,OAAA,CAACN,MAAM;UAAC+C,OAAO,EAAC,WAAW;UAACK,OAAO,EAAE5B,WAAY;UAAC6B,EAAE,EAAE;YAAEP,EAAE,EAAE;UAAE,CAAE;UAAAD,QAAA,EAAC;QAEjE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGT7C,OAAA,CAACN,MAAM;UAAC+C,OAAO,EAAC,WAAW;UAACK,OAAO,EAAEpB,WAAY;UAACqB,EAAE,EAAE;YAAEP,EAAE,EAAE;UAAE,CAAE;UAAAD,QAAA,EAAC;QAEjE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAAC3C,EAAA,CAtHQD,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AAwHZ,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}