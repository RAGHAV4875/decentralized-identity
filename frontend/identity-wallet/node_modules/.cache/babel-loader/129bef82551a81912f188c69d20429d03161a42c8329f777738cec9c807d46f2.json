{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghav Sharma\\\\OneDrive\\\\Desktop\\\\decentralized-identity\\\\frontend\\\\identity-wallet\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Button, TextField, Container, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [did, setDID] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [document, setDocument] = useState('');\n\n  // Connect to MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setDID(`did:ethr:${address}`);\n    } else {\n      alert('Install MetaMask!');\n    }\n  };\n\n  // Register DID on the blockchain\n  const registerDID = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract('0x...PASTE_CONTRACT_ADDRESS_HERE',\n    // Replace with your contract address\n    ['function registerDID(string did, string document)'], signer);\n    await contract.registerDID(did, document);\n    alert('DID Registered!');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Decentralized Identity Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connectWallet,\n        sx: {\n          mt: 2\n        },\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), did && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Your DID: \", did]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Identity Document (JSON)\",\n          multiline: true,\n          rows: 4,\n          value: document,\n          onChange: e => setDocument(e.target.value),\n          sx: {\n            mt: 2,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: registerDID,\n          sx: {\n            mt: 2\n          },\n          children: \"Register DID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"itquRIRxVFejvLqd4SqEp1mtrp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","Button","TextField","Container","Typography","Box","jsxDEV","_jsxDEV","App","_s","did","setDID","privateKey","setPrivateKey","document","setDocument","connectWallet","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","address","getAddress","alert","registerDID","contract","Contract","children","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","label","multiline","rows","value","onChange","e","target","width","_c","$RefreshReg$"],"sources":["C:/Users/Raghav Sharma/OneDrive/Desktop/decentralized-identity/frontend/identity-wallet/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { Button, TextField, Container, Typography, Box } from '@mui/material';\r\n\r\nfunction App() {\r\n    const [did, setDID] = useState('');\r\n    const [privateKey, setPrivateKey] = useState('');\r\n    const [document, setDocument] = useState('');\r\n\r\n    // Connect to MetaMask\r\n    const connectWallet = async () => {\r\n        if (window.ethereum) {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const address = await signer.getAddress();\r\n            setDID(`did:ethr:${address}`);\r\n        } else {\r\n            alert('Install MetaMask!');\r\n        }\r\n    };\r\n\r\n    // Register DID on the blockchain\r\n    const registerDID = async () => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(\r\n            '0x...PASTE_CONTRACT_ADDRESS_HERE', // Replace with your contract address\r\n            ['function registerDID(string did, string document)'],\r\n            signer\r\n        );\r\n        await contract.registerDID(did, document);\r\n        alert('DID Registered!');\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Box mt={5}>\r\n                <Typography variant=\"h4\">Decentralized Identity Wallet</Typography>\r\n                <Button variant=\"contained\" onClick={connectWallet} sx={{ mt: 2 }}>\r\n                    Connect Wallet\r\n                </Button>\r\n                {did && (\r\n                    <Box mt={3}>\r\n                        <Typography>Your DID: {did}</Typography>\r\n                        <TextField\r\n                            label=\"Identity Document (JSON)\"\r\n                            multiline\r\n                            rows={4}\r\n                            value={document}\r\n                            onChange={(e) => setDocument(e.target.value)}\r\n                            sx={{ mt: 2, width: '100%' }}\r\n                        />\r\n                        <Button variant=\"contained\" onClick={registerDID} sx={{ mt: 2 }}>\r\n                            Register DID\r\n                        </Button>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}